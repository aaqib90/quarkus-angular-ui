{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/applist/applist.component.ts","./src/app/applist/applist.component.html","./src/app/services/applist.service.ts","./src/app/services/employee-crud.service.ts","./src/app/tabledata/tabledata.component.ts","./src/app/tabledata/tabledata.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ApplistComponent } from './applist/applist.component';\nimport { TabledataComponent } from './tabledata/tabledata.component';\n\nconst routes: Routes = [\n  { path: '', component: TabledataComponent },\n  {  path: 'allapp', component: ApplistComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { EmployeeCrudService } from 'src/app/services/employee-crud.service'\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n\n})\nexport class AppComponent {\n  \n\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ApplistComponent } from './applist/applist.component';\nimport { TabledataComponent } from './tabledata/tabledata.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ApplistComponent,\n    TabledataComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AllappService } from '../services/applist.service';\n\n@Component({\n  selector: 'app-applist',\n  templateUrl: './applist.component.html',\n  styleUrls: ['./applist.component.css']\n})\nexport class ApplistComponent implements OnInit {\n\n  constructor( public allappService: AllappService) {}\n  issueData: any = [];\n  issueDataTotalCount: Number = 0;\n  parentAppData: any = [];\n\n  ngOnInit(): void {\n    this.generateIssueTable('mandatory');\n    this.allappService.parentAppList().subscribe((data) => {\n      this.parentAppData = data;\n    })\n  }\n\n  generateIssueTable (issueName) {\n    this.issueData = [];\n    this.issueDataTotalCount = 0;\n    this.allappService.issueCategoryList(issueName).subscribe((data) => {\n      console.log(data);\n      if(data && data[0] && data[0].title) {\n        this.issueData = data[0].title;\n        this.issueDataTotalCount = this.issueData.length;\n        console.log(this.issueData);\n      } else {\n        this.issueData = [];\n        this.issueDataTotalCount =0;\n      }\n    });\n  }\n\n  navClick(event: any) {\n    //alert()\n    console.log(event.target.value);\n    this.generateIssueTable(event.target.value);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"dashboard\">\n        <div class=\"issueCategoryTable\">\n            <table>\n                <thead id=\"parentAppTableHeader\">\n                    <!-- <th> -->\n                        <td>Parent App Name</td>\n                        <td>Mandatory</td>\n                        <td>Optional</td>\n                        <td>Potential</td>\n                        <td>Issue Category</td>\n                        <td>Information</td>\n                        <td>Cloud mandatory</td>\n                    <!-- </th> -->\n                </thead>\n                \n                <tbody>\n                    <tr *ngFor=\"let obj of parentAppData\">\n                        <td><h5>{{ obj.parentAppName  }}</h5></td>\n                        <td><h5>{{ obj.mandatory  }}</h5></td>\n                        <td><h5>{{ obj.optional  }}</h5></td>\n                        <td><h5>{{ obj.potential  }}</h5></td>\n                        <td><h5>{{ obj.issueCategory  }}</h5></td>\n                        <td><h5>{{ obj.information  }}</h5></td>\n                        <td><h5>{{ obj.cloudMandatory  }}</h5></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <nav class=\"navbar\">\n        <button (click)=\"navClick($event)\" value=\"mandatory\">\n            Mandatory\n        </button>\n        <button (click)=\"navClick($event)\" value=\"optional\">\n            Optional\n        </button>\n        <button (click)=\"navClick($event)\" value=\"potential\">\n            Potential\n        </button>\n        <button (click)=\"navClick($event)\" value=\"Issue Category\">\n            Issue Category\n        </button>\n        <button (click)=\"navClick($event)\" value=\"information\">\n            Information\n        </button>\n        <button (click)=\"navClick($event)\" value=\"cloud mandatory\">\n            Cloud mandatory\n        </button>\n    </nav>\n    <div class=\"issueCategoryTable\">\n        <h3>Total count is - {{issueDataTotalCount}}</h3>\n        <table>\n            <thead>\n                <th>\n                    <tr>Title</tr>\n                </th>\n            </thead>\n            \n            <tbody>\n                <tr *ngFor=\"let obj of issueData\">\n                    <td><h5>{{ obj  }}</h5></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class AllappService {\r\n    constructor(private http: HttpClient,) { }\r\n    \r\n    issueCategoryList(issueName){\r\n        let url = 'https://quarkus-angularui.herokuapp.com/filter-issue?issueCategory='+issueName;\r\n        \r\n        return this.http.get<any>(url)\r\n        .pipe(      \r\n           map(data => {          \r\n              return data;\r\n          },\r\n          catchError(error => {\r\n              return error;\r\n          }))\r\n           );\r\n      }\r\n\r\n      parentAppList(){\r\n        let url = 'https://quarkus-angularui.herokuapp.com/allapp-dashboard';\r\n        \r\n        return this.http.get<any>(url)\r\n        .pipe(      \r\n           map(data => {          \r\n              return data;\r\n          },\r\n          catchError(error => {\r\n              return error;\r\n          }))\r\n           );\r\n      }\r\n  }","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from 'src/environments/environment';\nimport { map, catchError, timeout } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeCrudService {\n\n  constructor(private http: HttpClient,) { }\n  \n  employeeList(dbName){\n    let url = null;\n    if(dbName == 'mongodb') {\n      url = `${environment.mongodbUrl}`;\n    } else {\n      url = `${environment.mysqlUrl}`;\n    }\n    return this.http.get<any>(url)\n    .pipe(      \n       map(data => {          \n          return data;\n      },\n      catchError(error => {\n          return error;\n      }))\n       );\n  }\n\n  employeeAdd(dbName, req){\n    let url = null;\n    if(dbName == 'mongodb') {\n      url = `${environment.mongodbUrl}`;\n    } else {\n      url = `${environment.mysqlUrl}`;\n    }\n    return this.http.post<any>(url, req)\n    //return this.http.post<any>(`${environment.mysqlUrl}`, req)\n    .pipe(      \n       map(data => {          \n          return data;\n      },\n      catchError(error => {\n          return error;\n      }))\n       );\n  }\n\n  employeeDelete(dbName, id){\n    let url = null;\n    if(dbName == 'mongodb') {\n      url = `${environment.mongodbUrl}`;\n    } else {\n      url = `${environment.mysqlUrl}`;\n    }\n\n    if(confirm(\"Are you sure?\")){\n    return this.http.delete(url+`/${id}`)\n    .pipe(      \n       map(data => {          \n          return data;\n      },\n      catchError(error => {\n          return error;\n      }))\n       );}\n  }\n\n  employeeUpdate(dbName, id, req){\n    let url = null;\n    if(dbName == 'mongodb') {\n      url = `${environment.mongodbUrl}`;\n    } else {\n      url = `${environment.mysqlUrl}`;\n    }\n    return this.http.put<any>(url+`/${id}`, req)\n    .pipe(      \n       map(data => {          \n          return data;\n      },\n      catchError(error => {\n          return error;\n      }))\n       );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { EmployeeCrudService } from '../services/employee-crud.service';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-tabledata',\n  templateUrl: './tabledata.component.html',\n  styleUrls: ['./tabledata.component.css']\n})\nexport class TabledataComponent implements OnInit {\n  title = 'quarkus-ui';\n  employeesList: any;\n  empId: number;\n  empName: string;\n  empSal: number;\n  empAge: number;\n  loginSuccess: boolean;\n  respId: string;\n  buttonClass: string;\n\n  alertBox: boolean = false;\n  updateForm: boolean = false;\n\n  _mysql :string = 'mysql';\n  _mongodb : string = 'mongodb';\n\n  currentTab: string = 'mysql';\n\n  activeMongodbClass:string;\n  activeMysqlClass:string;\n\n  constructor(public empCrud: EmployeeCrudService) { }\n\n  ngOnInit() {\n    this.showEmployeeList(this._mysql);\n    this.activeMysqlClass = \"active\";\n  }\n\n  switchTab(val) {\n    if(val === 'mongodb') {\n      this.currentTab = 'mongodb';\n      this.showEmployeeList(this._mongodb);\n      this.activeMongodbClass = \"active\";\n      this.activeMysqlClass = \"\";\n    } else {\n      this.currentTab ='mysql';\n      this.showEmployeeList(this._mysql);\n      this.activeMysqlClass = \"active\";\n      this.activeMongodbClass = \"\";\n    }\n  }\n\n\n  showEmployeeList(dbName) {\n    this.empCrud.employeeList(dbName).subscribe((data) => {\n      this.employeesList = data.data;\n      console.log(this.employeesList);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  empDetailsForm = new FormGroup({\n    empname: new FormControl('', [Validators.required]),\n    empID: new FormControl('', [Validators.required]),\n    empage: new FormControl('', [Validators.required]),\n  });\n\n  IsInvalid() {\n    if (this.empDetailsForm.valid) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  closePopup() {\n    this.empDetailsForm.reset();\n    this.alertBox = false;\n  }\n\n  addEmployee() {\n    var request = {\n      \"employee_name\": this.empDetailsForm.value.empname,\n      \"id\": this.empDetailsForm.value.empID,\n      \"employee_age\": this.empDetailsForm.value.empage,\n      \"profile_image\": ''\n    }\n    console.log(\"request\", request);\n\n    const dbName = this.currentTab;\n\n    if (this.empDetailsForm.valid) {\n      this.empCrud.employeeAdd(dbName, request).subscribe(employeeAddResponse => {\n        console.log(\"employeeAddResponse\", employeeAddResponse);\n        console.log(\"Form Submitted!\");\n        this.showEmployeeList(dbName);\n        this.closePopup();\n        return employeeAddResponse;\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n\n  updateEmpPopup(empObj) {\n    this.alertBox = true;\n    this.updateForm = true;\n    var id = empObj.id;\n    var name = empObj.employee_name;\n    var age = empObj.employee_age;\n    console.log(id, name, age);\n    this.empDetailsForm.setValue({\n      empID: id,\n      empname: name,\n      empage: age\n    });\n  }\n\n  updateEmployee(id) {\n    var request = {\n      \"employee_name\": this.empDetailsForm.value.empname,\n      \"id\": this.empDetailsForm.value.empID,\n      \"employee_age\": this.empDetailsForm.value.empage,\n      \"profile_image\": ''\n    }\n    console.log(\"request\", request);\n    console.log(\"ID\", id);\n    if (this.empDetailsForm.valid) {\n      this.empCrud.employeeUpdate(this.currentTab ,id, request).subscribe(employeeUpdateResponse => {\n        console.log(\"employeeUpdateResponse\", employeeUpdateResponse);\n        console.log(\"Updated Submitted!\");\n        this.showEmployeeList(this.currentTab);\n        this.closePopup();\n        this.updateForm = false;\n        return employeeUpdateResponse;\n      }, error => {\n        console.log(error);\n        this.updateForm = false;\n      });\n    }\n  }\n\n  addOrUpdate() {\n    if (this.updateForm == true) {\n    this.updateEmployee(this.empDetailsForm.value.empID);\n    }\n    else {\n      this.addEmployee();\n    }\n  }\n\n  deleteEmployee(id) {\n    this.empCrud.employeeDelete(this.currentTab, id).subscribe(employeeDeleteResponse => {\n      console.log(employeeDeleteResponse);\n      this.showEmployeeList(this.currentTab);\n      return employeeDeleteResponse;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  showPopup() {\n    this.alertBox = true;\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"header\"><img src=\"assets/logo.png\"></div>\n    <div class=\"bodyContainer\">\n        <div class=\"container\">\n            <h1>Quarkus POC</h1>\n            <p>This poc is developed on Quarkus Micro-services and Angular UI. There are two microservices of Employee record, one is integrated with MongoDB and another one is integrated with MySQL. This application is deployed in Heroku with automatic CI/CD pipelines.. </p>\n        <div class=\"dataButton\">\n            <a (click)=\"switchTab('mysql')\" [class]=\"activeMysqlClass\">MySQL</a>\n            <a (click)=\"switchTab('mongodb')\" [class]=\"activeMongodbClass\">MongoDB</a>\n        </div>\n        <div>\n            <p class=\"add\"><a (click)=\"showPopup()\" class=\"addEmployee\">Add Employee</a></p>\n            <div class=\"dataTable\">\n                <div class=\"row header\">\n                    <div class=\"col\">ID</div>\n                    <div class=\"col\">Employee Name</div>\n                    <!-- <div class=\"col\">Employee Salary</div> -->\n                    <div class=\"col\">Age</div>\n                    <div class=\"col\">Action</div>\n                </div>\n                <div class=\"tableHolder\">\n                    <div class=\"row\" *ngFor=\"let employee of employeesList\">\n                        <div class=\"col\"><span>ID</span> {{employee.id}}</div>\n                        <div class=\"col\"><span>Employee Name</span> {{employee.employee_name}}</div>\n                        <!-- <div class=\"col\"><span>Employee Salary</span> {{employee.employee_salary}}</div> -->\n                        <div class=\"col\"><span>Age</span> {{employee.employee_age}}</div>\n                        <div class=\"col\"><span>Action</span>\n                            <a href=\"#\" (click)=\"updateEmpPopup(employee)\"><img src=\"assets/edit.png\" alt=\"Edit Row\" title=\"Edit Row\"></a>\n                            <a href=\"#\" (click)=\"deleteEmployee(employee.id)\"><img src=\"assets/delete.png\" alt=\"Delete Row\" title=\"Delete Row\"></a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n            <div class=\"footer\">© Copyright 2020. Prolifics</div>\n        </div>\n    </div>\n\n    <div class=\"popBox\" *ngIf=\"alertBox\">\n        <div class=\"innerBox\">\n            <div class=\"addEmp\">\n                <h3>Add Employee</h3>\n                <form [formGroup]=\"empDetailsForm\" (ngSubmit)=\"addOrUpdate()\">\n                    <div class=\"formContainer\">\n                        <div class=\"form-group\">\n                            <label>ID</label>\n                            <input formControlName=\"empID\" type=\"text\">\n                            <div class=\"errorBox\" *ngIf=\"empDetailsForm.get('empID').invalid && (empDetailsForm.get('empID').dirty || empDetailsForm.get('empID').touched)\">\n                                <span *ngIf=\"empDetailsForm.get('empID').errors.required\">Employee ID is required.</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Employee Name</label>\n                            <input formControlName=\"empname\" type=\"text\">\n                            <div class=\"errorBox\" *ngIf=\"empDetailsForm.get('empname').invalid && (empDetailsForm.get('empname').dirty || empDetailsForm.get('empname').touched)\">\n                                <span *ngIf=\"empDetailsForm.get('empname').errors.required\">Employee Name is required.</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Employee Age</label>\n                            <input formControlName=\"empage\" type=\"text\">\n                            <div class=\"errorBox\" *ngIf=\"empDetailsForm.get('empage').invalid && (empDetailsForm.get('empage').dirty || empDetailsForm.get('empage').touched)\">\n                                <span *ngIf=\"empDetailsForm.get('empage').errors.required\">Employee Age is required.</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group textCenter\">\n                            <button (click)=\"closePopup()\" class=\"btn\">Cancel</button>\n                            <button [disabled]=\"IsInvalid()\" class=\"btn main\" type=\"submit\">Submit</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  mysqlUrl: 'https://quarkus-mysql-api.herokuapp.com/api/v1/employees',\n  mongodbUrl: 'https://quarkusapi.herokuapp.com/api/v1/employees'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}