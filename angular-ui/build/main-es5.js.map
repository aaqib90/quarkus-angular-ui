{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/applist/applist.component.ts","webpack:///src/app/applist/applist.component.html","webpack:///src/app/services/applist.service.ts","webpack:///src/app/services/employee-crud.service.ts","webpack:///src/app/tabledata/tabledata.component.ts","webpack:///src/app/tabledata/tabledata.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ApplistComponent","allappService","issueData","issueDataTotalCount","generateIssueTable","issueName","issueCategoryList","subscribe","data","console","log","title","length","event","target","value","navClick","AllappService","http","url","get","pipe","error","providedIn","EmployeeCrudService","dbName","mongodbUrl","mysqlUrl","post","confirm","put","TabledataComponent","empCrud","alertBox","updateForm","_mysql","_mongodb","currentTab","empDetailsForm","empname","required","empID","empage","showEmployeeList","activeMysqlClass","val","activeMongodbClass","employeeList","employeesList","valid","reset","request","employeeAdd","employeeAddResponse","closePopup","empObj","name","employee_name","age","employee_age","setValue","employeeUpdate","employeeUpdateResponse","updateEmployee","addEmployee","employeeDelete","employeeDeleteResponse","switchTab","showPopup","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADqB,EAErB;AAAGD,UAAI,EAAE,QAAT;AAAmBC,eAAS,EAAE;AAA9B,KAFqB,CAAvB;;QASaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACd7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaQ,Y;;;;;uBAAAA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACVzB;;;;;;;;;sEDUaA,Y,EAAY;cANxB,uDAMwB;eANd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAMc,Q;;;;;;;;;;;;;;;;;;AEVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA0BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAPJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,kEAJO,EAKP,0DALO,CAOI;;;;0HAGFA,S,EAAS;AAAA,uBAdlB,2DAckB,EAblB,2EAakB,EAZlB,iFAYkB;AAZA,kBAGlB,uEAHkB,EAIlB,oEAJkB,EAKlB,qEALkB,EAMlB,kEANkB,EAOlB,0DAPkB;AAYA,O;AALP,K;;;;;sEAKFA,S,EAAS;cAhBrB,sDAgBqB;eAhBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,2EAFY,EAGZ,iFAHY,CADN;AAMRN,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,kEAJO,EAKP,0DALO,CAND;AAaRO,mBAAS,EAAE,EAbH;AAcRC,mBAAS,EAAE,CAAC,2DAAD;AAdH,S;AAgBY,Q;;;;;;;;;;;;;;;;;;AC1BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkCgB;;AACI;;AAAI;;AAAI;;AAAU;;AAAK;;AAC3B;;;;;;AADY;;AAAA;;;;QD3BfC,gB;AAEX,gCAAoBC,aAApB,EAAkD;AAAA;;AAA9B,aAAAA,aAAA,GAAAA,aAAA;AACpB,aAAAC,SAAA,GAAiB,EAAjB;AACA,aAAAC,mBAAA,GAA8B,CAA9B;AAFoD;;;;mCAI5C;AACN,eAAKC,kBAAL,CAAwB,WAAxB;AACD;;;2CAEmBC,S,EAAW;AAAA;;AAC7B,eAAKH,SAAL,GAAiB,EAAjB;AACA,eAAKC,mBAAL,GAA2B,CAA3B;AACA,eAAKF,aAAL,CAAmBK,iBAAnB,CAAqCD,SAArC,EAAgDE,SAAhD,CAA0D,UAACC,IAAD,EAAU;AAClEC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,gBAAGA,IAAI,IAAIA,IAAI,CAAC,CAAD,CAAZ,IAAmBA,IAAI,CAAC,CAAD,CAAJ,CAAQG,KAA9B,EAAqC;AACnC,mBAAI,CAACT,SAAL,GAAiBM,IAAI,CAAC,CAAD,CAAJ,CAAQG,KAAzB;AACA,mBAAI,CAACR,mBAAL,GAA2B,KAAI,CAACD,SAAL,CAAeU,MAA1C;AACAH,qBAAO,CAACC,GAAR,CAAY,KAAI,CAACR,SAAjB;AACD,aAJD,MAIO;AACL,mBAAI,CAACA,SAAL,GAAiB,EAAjB;AACA,mBAAI,CAACC,mBAAL,GAA0B,CAA1B;AACD;AACF,WAVD;AAWD;;;iCAEQU,K,EAAY;AACnB;AACAJ,iBAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACA,eAAKX,kBAAL,CAAwBS,KAAK,CAACC,MAAN,CAAaC,KAArC;AACD;;;;;;;uBA9BUf,gB,EAAgB,wI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,yV;AAAA;AAAA;ACR7B;;AACI;;AAGA;;AACI;;AAAQ;AAAA,mBAAS,IAAAgB,QAAA,QAAT;AAAyB,WAAzB;;AACJ;;AACJ;;AACA;;AAAQ;AAAA,mBAAS,IAAAA,QAAA,QAAT;AAAyB,WAAzB;;AACJ;;AACJ;;AACA;;AAAQ;AAAA,mBAAS,IAAAA,QAAA,QAAT;AAAyB,WAAzB;;AACJ;;AACJ;;AACA;;AAAQ;AAAA,mBAAS,IAAAA,QAAA,QAAT;AAAyB,WAAzB;;AACJ;;AACJ;;AACA;;AAAQ;AAAA,mBAAS,IAAAA,QAAA,QAAT;AAAyB,WAAzB;;AACJ;;AACJ;;AACA;;AAAQ;AAAA,mBAAS,IAAAA,QAAA,QAAT;AAAyB,WAAzB;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AAAwC;;AAC5C;;AACI;;AACI;;AACI;;AAAI;;AAAI;;AACZ;;AACJ;;AAEA;;AACI;;AAGJ;;AACJ;;AACJ;;AACJ;;;;AAfY;;AAAA;;AASQ;;AAAA;;;;;;;;;sED1BPhB,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTP,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;AER7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOesB,a;AACX,6BAAoBC,IAApB,EAAoC;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAAsB;;;;0CAExBb,S,EAAS;AACvB,cAAIc,GAAG,GAAG,wEAAsEd,SAAhF;AAEA,iBAAO,KAAKa,IAAL,CAAUE,GAAV,CAAmBD,GAAnB,EACNE,IADM,CAEJ,2DAAI,UAAAb,IAAI,EAAI;AACT,mBAAOA,IAAP;AACH,WAFA,EAGD,kEAAW,UAAAc,KAAK,EAAI;AAChB,mBAAOA,KAAP;AACH,WAFD,CAHC,CAFI,CAAP;AASD;;;;;;;uBAfQL,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAH3B,wDAG2B;eAHhB;AACRM,oBAAU,EAAE;AADJ,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,mB;AAEX,mCAAoBN,IAApB,EAAoC;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAAsB;;;;qCAE7BO,M,EAAM;AACjB,cAAIN,GAAG,GAAG,IAAV;;AACA,cAAGM,MAAM,IAAI,SAAb,EAAwB;AACtBN,eAAG,aAAM,yEAAYO,UAAlB,CAAH;AACD,WAFD,MAEO;AACLP,eAAG,aAAM,yEAAYQ,QAAlB,CAAH;AACD;;AACD,iBAAO,KAAKT,IAAL,CAAUE,GAAV,CAAmBD,GAAnB,EACNE,IADM,CAEJ,2DAAI,UAAAb,IAAI,EAAI;AACT,mBAAOA,IAAP;AACH,WAFA,EAGD,kEAAW,UAAAc,KAAK,EAAI;AAChB,mBAAOA,KAAP;AACH,WAFD,CAHC,CAFI,CAAP;AASD;;;oCAEWG,M,EAAQlD,G,EAAG;AACrB,cAAI4C,GAAG,GAAG,IAAV;;AACA,cAAGM,MAAM,IAAI,SAAb,EAAwB;AACtBN,eAAG,aAAM,yEAAYO,UAAlB,CAAH;AACD,WAFD,MAEO;AACLP,eAAG,aAAM,yEAAYQ,QAAlB,CAAH;AACD;;AACD,iBAAO,KAAKT,IAAL,CAAUU,IAAV,CAAoBT,GAApB,EAAyB5C,GAAzB,EACP;AADO,WAEN8C,IAFM,CAGJ,2DAAI,UAAAb,IAAI,EAAI;AACT,mBAAOA,IAAP;AACH,WAFA,EAGD,kEAAW,UAAAc,KAAK,EAAI;AAChB,mBAAOA,KAAP;AACH,WAFD,CAHC,CAHI,CAAP;AAUD;;;uCAEcG,M,EAAQxC,E,EAAE;AACvB,cAAIkC,GAAG,GAAG,IAAV;;AACA,cAAGM,MAAM,IAAI,SAAb,EAAwB;AACtBN,eAAG,aAAM,yEAAYO,UAAlB,CAAH;AACD,WAFD,MAEO;AACLP,eAAG,aAAM,yEAAYQ,QAAlB,CAAH;AACD;;AAED,cAAGE,OAAO,CAAC,eAAD,CAAV,EAA4B;AAC5B,mBAAO,KAAKX,IAAL,WAAiBC,GAAG,cAAKlC,EAAL,CAApB,EACNoC,IADM,CAEJ,2DAAI,UAAAb,IAAI,EAAI;AACT,qBAAOA,IAAP;AACH,aAFA,EAGD,kEAAW,UAAAc,KAAK,EAAI;AAChB,qBAAOA,KAAP;AACH,aAFD,CAHC,CAFI,CAAP;AAQM;AACP;;;uCAEcG,M,EAAQxC,E,EAAIV,G,EAAG;AAC5B,cAAI4C,GAAG,GAAG,IAAV;;AACA,cAAGM,MAAM,IAAI,SAAb,EAAwB;AACtBN,eAAG,aAAM,yEAAYO,UAAlB,CAAH;AACD,WAFD,MAEO;AACLP,eAAG,aAAM,yEAAYQ,QAAlB,CAAH;AACD;;AACD,iBAAO,KAAKT,IAAL,CAAUY,GAAV,CAAmBX,GAAG,cAAKlC,EAAL,CAAtB,EAAiCV,GAAjC,EACN8C,IADM,CAEJ,2DAAI,UAAAb,IAAI,EAAI;AACT,mBAAOA,IAAP;AACH,WAFA,EAGD,kEAAW,UAAAc,KAAK,EAAI;AAChB,mBAAOA,KAAP;AACH,WAFD,CAHC,CAFI,CAAP;AASD;;;;;;;uBA7EUE,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVD,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;ACThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACqBoB;;AACI;;AAAiB;;AAAM;;AAAE;;AAAQ;;AAAe;;AAChD;;AAAiB;;AAAM;;AAAa;;AAAQ;;AAA0B;;AAEtE;;AAAiB;;AAAM;;AAAG;;AAAQ;;AAAyB;;AAC3D;;AAAiB;;AAAM;;AAAM;;AACzB;;AAAY;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmC;;AAA/C;;AACA;;AAAY;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AAAlD;;AACJ;;AACJ;;;;;;AARqC;;AAAA;;AACW;;AAAA;;AAEV;;AAAA;;;;;;AAuB1B;;AAA0D;;AAAwB;;;;;;AADtF;;AACI;;AACJ;;;;;;AADU;;AAAA;;;;;;AAON;;AAA4D;;AAA0B;;;;;;AAD1F;;AACI;;AACJ;;;;;;AADU;;AAAA;;;;;;AAON;;AAA2D;;AAAyB;;;;;;AADxF;;AACI;;AACJ;;;;;;AADU;;AAAA;;;;;;;;AAxBlC;;AACI;;AACI;;AACI;;AAAI;;AAAY;;AAChB;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAC/B;;AACI;;AACI;;AAAO;;AAAE;;AACT;;AACA;;AAGJ;;AACA;;AACI;;AAAO;;AAAa;;AACpB;;AACA;;AAGJ;;AACA;;AACI;;AAAO;;AAAY;;AACnB;;AACA;;AAGJ;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAmC;;AAAM;;AACjD;;AAAgE;;AAAM;;AAC1E;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA/BkB;;AAAA;;AAK4B;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAMd;;AAAA;;;;QD1DvBQ,kB;AAsBX,kCAAmBC,OAAnB,EAAiD;AAAA;;AAA9B,aAAAA,OAAA,GAAAA,OAAA;AArBnB,aAAArB,KAAA,GAAQ,YAAR;AAUA,aAAAsB,QAAA,GAAoB,KAApB;AACA,aAAAC,UAAA,GAAsB,KAAtB;AAEA,aAAAC,MAAA,GAAiB,OAAjB;AACA,aAAAC,QAAA,GAAoB,SAApB;AAEA,aAAAC,UAAA,GAAqB,OAArB;AAoCA,aAAAC,cAAA,GAAiB,IAAI,wDAAJ,CAAc;AAC7BC,iBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,QAAZ,CAApB,CADoB;AAE7BC,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWD,QAAZ,CAApB,CAFsB;AAG7BE,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWF,QAAZ,CAApB;AAHqB,SAAd,CAAjB;AA/BoD;;;;mCAEzC;AACT,eAAKG,gBAAL,CAAsB,KAAKR,MAA3B;AACA,eAAKS,gBAAL,GAAwB,QAAxB;AACD;;;kCAESC,G,EAAK;AACb,cAAGA,GAAG,KAAK,SAAX,EAAsB;AACpB,iBAAKR,UAAL,GAAkB,SAAlB;AACA,iBAAKM,gBAAL,CAAsB,KAAKP,QAA3B;AACA,iBAAKU,kBAAL,GAA0B,QAA1B;AACA,iBAAKF,gBAAL,GAAwB,EAAxB;AACD,WALD,MAKO;AACL,iBAAKP,UAAL,GAAiB,OAAjB;AACA,iBAAKM,gBAAL,CAAsB,KAAKR,MAA3B;AACA,iBAAKS,gBAAL,GAAwB,QAAxB;AACA,iBAAKE,kBAAL,GAA0B,EAA1B;AACD;AACF;;;yCAGgBrB,M,EAAQ;AAAA;;AACvB,eAAKO,OAAL,CAAae,YAAb,CAA0BtB,MAA1B,EAAkClB,SAAlC,CAA4C,UAACC,IAAD,EAAU;AACpD,kBAAI,CAACwC,aAAL,GAAqBxC,IAAI,CAACA,IAA1B;AACAC,mBAAO,CAACC,GAAR,CAAY,MAAI,CAACsC,aAAjB;AACD,WAHD,EAGG,UAAA1B,KAAK,EAAI;AACVb,mBAAO,CAACC,GAAR,CAAYY,KAAZ;AACD,WALD;AAMD;;;oCAQW;AACV,cAAI,KAAKgB,cAAL,CAAoBW,KAAxB,EAA+B;AAC7B,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;;;qCAEY;AACX,eAAKX,cAAL,CAAoBY,KAApB;AACA,eAAKjB,QAAL,GAAgB,KAAhB;AACD;;;sCAEa;AAAA;;AACZ,cAAIkB,OAAO,GAAG;AACZ,6BAAiB,KAAKb,cAAL,CAAoBvB,KAApB,CAA0BwB,OAD/B;AAEZ,kBAAM,KAAKD,cAAL,CAAoBvB,KAApB,CAA0B0B,KAFpB;AAGZ,4BAAgB,KAAKH,cAAL,CAAoBvB,KAApB,CAA0B2B,MAH9B;AAIZ,6BAAiB;AAJL,WAAd;AAMAjC,iBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuByC,OAAvB;AAEA,cAAM1B,MAAM,GAAG,KAAKY,UAApB;;AAEA,cAAI,KAAKC,cAAL,CAAoBW,KAAxB,EAA+B;AAC7B,iBAAKjB,OAAL,CAAaoB,WAAb,CAAyB3B,MAAzB,EAAiC0B,OAAjC,EAA0C5C,SAA1C,CAAoD,UAAA8C,mBAAmB,EAAI;AACzE5C,qBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC2C,mBAAnC;AACA5C,qBAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,oBAAI,CAACiC,gBAAL,CAAsBlB,MAAtB;;AACA,oBAAI,CAAC6B,UAAL;;AACA,qBAAOD,mBAAP;AACD,aAND,EAMG,UAAA/B,KAAK,EAAI;AACVb,qBAAO,CAACC,GAAR,CAAYY,KAAZ;AACD,aARD;AASD;AACF;;;uCAEciC,M,EAAQ;AACrB,eAAKtB,QAAL,GAAgB,IAAhB;AACA,eAAKC,UAAL,GAAkB,IAAlB;AACA,cAAIjD,EAAE,GAAGsE,MAAM,CAACtE,EAAhB;AACA,cAAIuE,IAAI,GAAGD,MAAM,CAACE,aAAlB;AACA,cAAIC,GAAG,GAAGH,MAAM,CAACI,YAAjB;AACAlD,iBAAO,CAACC,GAAR,CAAYzB,EAAZ,EAAgBuE,IAAhB,EAAsBE,GAAtB;AACA,eAAKpB,cAAL,CAAoBsB,QAApB,CAA6B;AAC3BnB,iBAAK,EAAExD,EADoB;AAE3BsD,mBAAO,EAAEiB,IAFkB;AAG3Bd,kBAAM,EAAEgB;AAHmB,WAA7B;AAKD;;;uCAEczE,E,EAAI;AAAA;;AACjB,cAAIkE,OAAO,GAAG;AACZ,6BAAiB,KAAKb,cAAL,CAAoBvB,KAApB,CAA0BwB,OAD/B;AAEZ,kBAAM,KAAKD,cAAL,CAAoBvB,KAApB,CAA0B0B,KAFpB;AAGZ,4BAAgB,KAAKH,cAAL,CAAoBvB,KAApB,CAA0B2B,MAH9B;AAIZ,6BAAiB;AAJL,WAAd;AAMAjC,iBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuByC,OAAvB;AACA1C,iBAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBzB,EAAlB;;AACA,cAAI,KAAKqD,cAAL,CAAoBW,KAAxB,EAA+B;AAC7B,iBAAKjB,OAAL,CAAa6B,cAAb,CAA4B,KAAKxB,UAAjC,EAA6CpD,EAA7C,EAAiDkE,OAAjD,EAA0D5C,SAA1D,CAAoE,UAAAuD,sBAAsB,EAAI;AAC5FrD,qBAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCoD,sBAAtC;AACArD,qBAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,oBAAI,CAACiC,gBAAL,CAAsB,MAAI,CAACN,UAA3B;;AACA,oBAAI,CAACiB,UAAL;;AACA,oBAAI,CAACpB,UAAL,GAAkB,KAAlB;AACA,qBAAO4B,sBAAP;AACD,aAPD,EAOG,UAAAxC,KAAK,EAAI;AACVb,qBAAO,CAACC,GAAR,CAAYY,KAAZ;AACA,oBAAI,CAACY,UAAL,GAAkB,KAAlB;AACD,aAVD;AAWD;AACF;;;sCAEa;AACZ,cAAI,KAAKA,UAAL,IAAmB,IAAvB,EAA6B;AAC7B,iBAAK6B,cAAL,CAAoB,KAAKzB,cAAL,CAAoBvB,KAApB,CAA0B0B,KAA9C;AACC,WAFD,MAGK;AACH,iBAAKuB,WAAL;AACD;AACF;;;uCAEc/E,E,EAAI;AAAA;;AACjB,eAAK+C,OAAL,CAAaiC,cAAb,CAA4B,KAAK5B,UAAjC,EAA6CpD,EAA7C,EAAiDsB,SAAjD,CAA2D,UAAA2D,sBAAsB,EAAI;AACnFzD,mBAAO,CAACC,GAAR,CAAYwD,sBAAZ;;AACA,kBAAI,CAACvB,gBAAL,CAAsB,MAAI,CAACN,UAA3B;;AACA,mBAAO6B,sBAAP;AACD,WAJD,EAIG,UAAA5C,KAAK,EAAI;AACVb,mBAAO,CAACC,GAAR,CAAYY,KAAZ;AACD,WAND;AAOD;;;oCAEW;AACV,eAAKW,QAAL,GAAgB,IAAhB;AACD;;;;;;;uBA3JUF,kB,EAAkB,oJ;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,o8B;AAAA;AAAA;ACT/B;;AACI;;AAAoB;;AAApB;;AACA;;AACI;;AACI;;AAAI;;AAAW;;AACf;;AAAG;;AAAiQ;;AACxQ;;AACI;;AAAG;AAAA,mBAAS,IAAAoC,SAAA,CAAU,OAAV,CAAT;AAA2B,WAA3B;;AAAwD;;AAAK;;AAChE;;AAAG;AAAA,mBAAS,IAAAA,SAAA,CAAU,SAAV,CAAT;AAA6B,WAA7B;;AAA4D;;AAAO;;AAC1E;;AACA;;AACI;;AAAe;;AAAG;AAAA,mBAAS,IAAAC,SAAA,EAAT;AAAoB,WAApB;;AAA0C;;AAAY;;AAAI;;AAC5E;;AACI;;AACI;;AAAiB;;AAAE;;AACnB;;AAAiB;;AAAa;;AAE9B;;AAAiB;;AAAG;;AACpB;;AAAiB;;AAAM;;AAC3B;;AACA;;AACI;;AAUJ;;AACJ;;AACJ;;AACI;;AAAoB;;AAA2B;;AACnD;;AACJ;;AAEA;;AAoCJ;;;;AAnE4C;;AAAA;;AACE;;AAAA;;AAaT;;AAAA;;AAiBb;;AAAA;;;;;;;;;sED7BXrC,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTtC,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AET/B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM0E,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzB3C,cAAQ,EAAE,0DAFe;AAGzBD,gBAAU,EAAE;AAHa,KAApB;AAMP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACjBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAY4C,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI/D,OAAO,CAACa,KAAR,CAAckD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ApplistComponent } from './applist/applist.component';\nimport { TabledataComponent } from './tabledata/tabledata.component';\n\nconst routes: Routes = [\n  { path: '', component: TabledataComponent },\n  {  path: 'allapp', component: ApplistComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { EmployeeCrudService } from 'src/app/services/employee-crud.service'\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n\n})\nexport class AppComponent {\n  \n\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ApplistComponent } from './applist/applist.component';\nimport { TabledataComponent } from './tabledata/tabledata.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ApplistComponent,\n    TabledataComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AllappService } from '../services/applist.service';\n\n@Component({\n  selector: 'app-applist',\n  templateUrl: './applist.component.html',\n  styleUrls: ['./applist.component.css']\n})\nexport class ApplistComponent implements OnInit {\n\n  constructor( public allappService: AllappService) {}\n  issueData: any = [];\n  issueDataTotalCount: Number = 0;\n\n  ngOnInit(): void {\n    this.generateIssueTable('mandatory');\n  }\n\n  generateIssueTable (issueName) {\n    this.issueData = [];\n    this.issueDataTotalCount = 0;\n    this.allappService.issueCategoryList(issueName).subscribe((data) => {\n      console.log(data);\n      if(data && data[0] && data[0].title) {\n        this.issueData = data[0].title;\n        this.issueDataTotalCount = this.issueData.length;\n        console.log(this.issueData);\n      } else {\n        this.issueData = [];\n        this.issueDataTotalCount =0;\n      }\n    });\n  }\n\n  navClick(event: any) {\n    //alert()\n    console.log(event.target.value);\n    this.generateIssueTable(event.target.value);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"dashboard\">\n\n    </div>\n    <nav class=\"navbar\">\n        <button (click)=\"navClick($event)\" value=\"mandatory\">\n            Mandatory\n        </button>\n        <button (click)=\"navClick($event)\" value=\"optional\">\n            Optional\n        </button>\n        <button (click)=\"navClick($event)\" value=\"potential\">\n            Potential\n        </button>\n        <button (click)=\"navClick($event)\" value=\"Issue Category\">\n            Issue Category\n        </button>\n        <button (click)=\"navClick($event)\" value=\"information\">\n            Information\n        </button>\n        <button (click)=\"navClick($event)\" value=\"cloud mandatory\">\n            Cloud mandatory\n        </button>\n    </nav>\n    <div class=\"issueCategoryTable\">\n        <h3>Total count is - {{issueDataTotalCount}}</h3>\n        <table>\n            <thead>\n                <th>\n                    <tr>Name</tr>\n                </th>\n            </thead>\n            \n            <tbody>\n                <tr *ngFor=\"let obj of issueData\">\n                    <td><h5>{{ obj  }}</h5></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class AllappService {\r\n    constructor(private http: HttpClient,) { }\r\n    \r\n    issueCategoryList(issueName){\r\n        let url = 'https://quarkus-angularui.herokuapp.com/filter-issue?issueCategory='+issueName;\r\n        \r\n        return this.http.get<any>(url)\r\n        .pipe(      \r\n           map(data => {          \r\n              return data;\r\n          },\r\n          catchError(error => {\r\n              return error;\r\n          }))\r\n           );\r\n      }\r\n  }","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from 'src/environments/environment';\nimport { map, catchError, timeout } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeCrudService {\n\n  constructor(private http: HttpClient,) { }\n  \n  employeeList(dbName){\n    let url = null;\n    if(dbName == 'mongodb') {\n      url = `${environment.mongodbUrl}`;\n    } else {\n      url = `${environment.mysqlUrl}`;\n    }\n    return this.http.get<any>(url)\n    .pipe(      \n       map(data => {          \n          return data;\n      },\n      catchError(error => {\n          return error;\n      }))\n       );\n  }\n\n  employeeAdd(dbName, req){\n    let url = null;\n    if(dbName == 'mongodb') {\n      url = `${environment.mongodbUrl}`;\n    } else {\n      url = `${environment.mysqlUrl}`;\n    }\n    return this.http.post<any>(url, req)\n    //return this.http.post<any>(`${environment.mysqlUrl}`, req)\n    .pipe(      \n       map(data => {          \n          return data;\n      },\n      catchError(error => {\n          return error;\n      }))\n       );\n  }\n\n  employeeDelete(dbName, id){\n    let url = null;\n    if(dbName == 'mongodb') {\n      url = `${environment.mongodbUrl}`;\n    } else {\n      url = `${environment.mysqlUrl}`;\n    }\n\n    if(confirm(\"Are you sure?\")){\n    return this.http.delete(url+`/${id}`)\n    .pipe(      \n       map(data => {          \n          return data;\n      },\n      catchError(error => {\n          return error;\n      }))\n       );}\n  }\n\n  employeeUpdate(dbName, id, req){\n    let url = null;\n    if(dbName == 'mongodb') {\n      url = `${environment.mongodbUrl}`;\n    } else {\n      url = `${environment.mysqlUrl}`;\n    }\n    return this.http.put<any>(url+`/${id}`, req)\n    .pipe(      \n       map(data => {          \n          return data;\n      },\n      catchError(error => {\n          return error;\n      }))\n       );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { EmployeeCrudService } from '../services/employee-crud.service';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-tabledata',\n  templateUrl: './tabledata.component.html',\n  styleUrls: ['./tabledata.component.css']\n})\nexport class TabledataComponent implements OnInit {\n  title = 'quarkus-ui';\n  employeesList: any;\n  empId: number;\n  empName: string;\n  empSal: number;\n  empAge: number;\n  loginSuccess: boolean;\n  respId: string;\n  buttonClass: string;\n\n  alertBox: boolean = false;\n  updateForm: boolean = false;\n\n  _mysql :string = 'mysql';\n  _mongodb : string = 'mongodb';\n\n  currentTab: string = 'mysql';\n\n  activeMongodbClass:string;\n  activeMysqlClass:string;\n\n  constructor(public empCrud: EmployeeCrudService) { }\n\n  ngOnInit() {\n    this.showEmployeeList(this._mysql);\n    this.activeMysqlClass = \"active\";\n  }\n\n  switchTab(val) {\n    if(val === 'mongodb') {\n      this.currentTab = 'mongodb';\n      this.showEmployeeList(this._mongodb);\n      this.activeMongodbClass = \"active\";\n      this.activeMysqlClass = \"\";\n    } else {\n      this.currentTab ='mysql';\n      this.showEmployeeList(this._mysql);\n      this.activeMysqlClass = \"active\";\n      this.activeMongodbClass = \"\";\n    }\n  }\n\n\n  showEmployeeList(dbName) {\n    this.empCrud.employeeList(dbName).subscribe((data) => {\n      this.employeesList = data.data;\n      console.log(this.employeesList);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  empDetailsForm = new FormGroup({\n    empname: new FormControl('', [Validators.required]),\n    empID: new FormControl('', [Validators.required]),\n    empage: new FormControl('', [Validators.required]),\n  });\n\n  IsInvalid() {\n    if (this.empDetailsForm.valid) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  closePopup() {\n    this.empDetailsForm.reset();\n    this.alertBox = false;\n  }\n\n  addEmployee() {\n    var request = {\n      \"employee_name\": this.empDetailsForm.value.empname,\n      \"id\": this.empDetailsForm.value.empID,\n      \"employee_age\": this.empDetailsForm.value.empage,\n      \"profile_image\": ''\n    }\n    console.log(\"request\", request);\n\n    const dbName = this.currentTab;\n\n    if (this.empDetailsForm.valid) {\n      this.empCrud.employeeAdd(dbName, request).subscribe(employeeAddResponse => {\n        console.log(\"employeeAddResponse\", employeeAddResponse);\n        console.log(\"Form Submitted!\");\n        this.showEmployeeList(dbName);\n        this.closePopup();\n        return employeeAddResponse;\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n\n  updateEmpPopup(empObj) {\n    this.alertBox = true;\n    this.updateForm = true;\n    var id = empObj.id;\n    var name = empObj.employee_name;\n    var age = empObj.employee_age;\n    console.log(id, name, age);\n    this.empDetailsForm.setValue({\n      empID: id,\n      empname: name,\n      empage: age\n    });\n  }\n\n  updateEmployee(id) {\n    var request = {\n      \"employee_name\": this.empDetailsForm.value.empname,\n      \"id\": this.empDetailsForm.value.empID,\n      \"employee_age\": this.empDetailsForm.value.empage,\n      \"profile_image\": ''\n    }\n    console.log(\"request\", request);\n    console.log(\"ID\", id);\n    if (this.empDetailsForm.valid) {\n      this.empCrud.employeeUpdate(this.currentTab ,id, request).subscribe(employeeUpdateResponse => {\n        console.log(\"employeeUpdateResponse\", employeeUpdateResponse);\n        console.log(\"Updated Submitted!\");\n        this.showEmployeeList(this.currentTab);\n        this.closePopup();\n        this.updateForm = false;\n        return employeeUpdateResponse;\n      }, error => {\n        console.log(error);\n        this.updateForm = false;\n      });\n    }\n  }\n\n  addOrUpdate() {\n    if (this.updateForm == true) {\n    this.updateEmployee(this.empDetailsForm.value.empID);\n    }\n    else {\n      this.addEmployee();\n    }\n  }\n\n  deleteEmployee(id) {\n    this.empCrud.employeeDelete(this.currentTab, id).subscribe(employeeDeleteResponse => {\n      console.log(employeeDeleteResponse);\n      this.showEmployeeList(this.currentTab);\n      return employeeDeleteResponse;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  showPopup() {\n    this.alertBox = true;\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"header\"><img src=\"assets/logo.png\"></div>\n    <div class=\"bodyContainer\">\n        <div class=\"container\">\n            <h1>Quarkus POC</h1>\n            <p>This poc is developed on Quarkus Micro-services and Angular UI. There are two microservices of Employee record, one is integrated with MongoDB and another one is integrated with MySQL. This application is deployed in Heroku with automatic CI/CD pipelines.. </p>\n        <div class=\"dataButton\">\n            <a (click)=\"switchTab('mysql')\" [class]=\"activeMysqlClass\">MySQL</a>\n            <a (click)=\"switchTab('mongodb')\" [class]=\"activeMongodbClass\">MongoDB</a>\n        </div>\n        <div>\n            <p class=\"add\"><a (click)=\"showPopup()\" class=\"addEmployee\">Add Employee</a></p>\n            <div class=\"dataTable\">\n                <div class=\"row header\">\n                    <div class=\"col\">ID</div>\n                    <div class=\"col\">Employee Name</div>\n                    <!-- <div class=\"col\">Employee Salary</div> -->\n                    <div class=\"col\">Age</div>\n                    <div class=\"col\">Action</div>\n                </div>\n                <div class=\"tableHolder\">\n                    <div class=\"row\" *ngFor=\"let employee of employeesList\">\n                        <div class=\"col\"><span>ID</span> {{employee.id}}</div>\n                        <div class=\"col\"><span>Employee Name</span> {{employee.employee_name}}</div>\n                        <!-- <div class=\"col\"><span>Employee Salary</span> {{employee.employee_salary}}</div> -->\n                        <div class=\"col\"><span>Age</span> {{employee.employee_age}}</div>\n                        <div class=\"col\"><span>Action</span>\n                            <a href=\"#\" (click)=\"updateEmpPopup(employee)\"><img src=\"assets/edit.png\" alt=\"Edit Row\" title=\"Edit Row\"></a>\n                            <a href=\"#\" (click)=\"deleteEmployee(employee.id)\"><img src=\"assets/delete.png\" alt=\"Delete Row\" title=\"Delete Row\"></a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n            <div class=\"footer\">© Copyright 2020. Prolifics</div>\n        </div>\n    </div>\n\n    <div class=\"popBox\" *ngIf=\"alertBox\">\n        <div class=\"innerBox\">\n            <div class=\"addEmp\">\n                <h3>Add Employee</h3>\n                <form [formGroup]=\"empDetailsForm\" (ngSubmit)=\"addOrUpdate()\">\n                    <div class=\"formContainer\">\n                        <div class=\"form-group\">\n                            <label>ID</label>\n                            <input formControlName=\"empID\" type=\"text\">\n                            <div class=\"errorBox\" *ngIf=\"empDetailsForm.get('empID').invalid && (empDetailsForm.get('empID').dirty || empDetailsForm.get('empID').touched)\">\n                                <span *ngIf=\"empDetailsForm.get('empID').errors.required\">Employee ID is required.</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Employee Name</label>\n                            <input formControlName=\"empname\" type=\"text\">\n                            <div class=\"errorBox\" *ngIf=\"empDetailsForm.get('empname').invalid && (empDetailsForm.get('empname').dirty || empDetailsForm.get('empname').touched)\">\n                                <span *ngIf=\"empDetailsForm.get('empname').errors.required\">Employee Name is required.</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Employee Age</label>\n                            <input formControlName=\"empage\" type=\"text\">\n                            <div class=\"errorBox\" *ngIf=\"empDetailsForm.get('empage').invalid && (empDetailsForm.get('empage').dirty || empDetailsForm.get('empage').touched)\">\n                                <span *ngIf=\"empDetailsForm.get('empage').errors.required\">Employee Age is required.</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group textCenter\">\n                            <button (click)=\"closePopup()\" class=\"btn\">Cancel</button>\n                            <button [disabled]=\"IsInvalid()\" class=\"btn main\" type=\"submit\">Submit</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  mysqlUrl: 'https://quarkus-mysql-api.herokuapp.com/api/v1/employees',\n  mongodbUrl: 'https://quarkusapi.herokuapp.com/api/v1/employees'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}